object ScriptForm: TScriptForm
  Tag = 2
  Left = 648
  Height = 380
  Top = 207
  Width = 420
  ActiveControl = Memo1
  Caption = 'ScriptForm'
  ClientHeight = 380
  ClientWidth = 420
  Menu = ScriptMenu1
  OnActivate = FormActivate
  OnCloseQuery = FormCloseQuery
  OnCreate = FormCreate
  OnDeactivate = FormDeactivate
  OnDropFiles = FormDropFiles
  OnHide = FormHide
  LCLVersion = '1.9.0.0'
  object Splitter1: TSplitter
    Cursor = crVSplit
    Left = 0
    Height = 4
    Top = 268
    Width = 420
    Align = alBottom
    ResizeAnchor = akBottom
  end
  object Memo1: TMemo
    Left = 0
    Height = 268
    Top = 0
    Width = 420
    Align = alClient
    Constraints.MinHeight = 3
    OnChange = Memo1Change
    OnClick = Memo1Click
    OnDragDrop = Memo1DragDrop
    OnKeyUp = Memo1KeyUp
    ParentFont = False
    ScrollBars = ssAutoBoth
    TabOrder = 0
    WantTabs = True
    WordWrap = False
  end
  object Memo2: TMemo
    Left = 0
    Height = 108
    Top = 272
    Width = 420
    Align = alBottom
    Constraints.MinHeight = 3
    ParentFont = False
    ReadOnly = True
    ScrollBars = ssVertical
    TabOrder = 1
  end
  object ScriptMenu1: TMainMenu
    left = 104
    top = 32
    object AppleMenu: TMenuItem
      Caption = 'ï£¿'
      OnClick = AppleMenuClick
    end
    object File1: TMenuItem
      Caption = '&File'
      OnClick = File1Click
      object New1: TMenuItem
        Caption = '&New'
        OnClick = New1Click
      end
      object Open1: TMenuItem
        Caption = '&Open...'
        OnClick = Open1Click
      end
      object Save1: TMenuItem
        Caption = '&Save'
        OnClick = Save1Click
      end
      object SaveAs1: TMenuItem
        Caption = 'Save &As...'
        OnClick = SaveAs1Click
      end
      object Exit1: TMenuItem
        Caption = 'E&xit'
        OnClick = Exit1Click
      end
      object N1: TMenuItem
        Caption = '-'
      end
      object MRU1: TMenuItem
        Caption = 'MRU1'
      end
      object MRU2: TMenuItem
        Caption = 'MRU2'
      end
      object MRU3: TMenuItem
        Caption = 'MRU3'
      end
      object MRU4: TMenuItem
        Caption = 'MRU4'
      end
      object MRU5: TMenuItem
        Caption = 'MRU5'
      end
      object MRU6: TMenuItem
        Caption = 'MRU6'
      end
      object MRU7: TMenuItem
        Caption = 'MRU7'
      end
      object MRU8: TMenuItem
        Caption = 'MRU8'
      end
      object MRU9: TMenuItem
        Caption = 'MRU9'
      end
      object MRU10: TMenuItem
        Caption = 'MRU10'
      end
    end
    object Edit1: TMenuItem
      Caption = 'Edit'
      object Cut1: TMenuItem
        Caption = 'Cut'
        ShortCut = 16472
        OnClick = Cut1Click
      end
      object Copy1: TMenuItem
        Caption = 'Copy'
        ShortCut = 16451
        OnClick = Copy1Click
      end
      object Paste1: TMenuItem
        Caption = 'Paste'
        ShortCut = 16470
        OnClick = Paste1Click
      end
    end
    object Insert1: TMenuItem
      Caption = 'Insert'
      object MainImage1: TMenuItem
        Caption = 'Mesh'
        object meshload1: TMenuItem
          Tag = 4
          Caption = 'meshload'
          Hint = 'meshload (lFilename: string) Opens a mesh to view.'
          OnClick = InsertCommand
        end
        object meshcolor1: TMenuItem
          Tag = 36
          Caption = 'meshcolor'
          Hint = 'MESHCOLOR (R,G,B: byte) set red/green/blue components of main image.'
          OnClick = InsertCommand
        end
        object meshcurv1: TMenuItem
          Caption = 'meshcurv'
          Hint = 'MESHCURV displays mesh curvature, so crevices appear dark.'
          OnClick = InsertCommand
        end
      end
      object Overlays1: TMenuItem
        Caption = 'Overlays'
        object overlayload1: TMenuItem
          Tag = 4
          Caption = 'overlayload'
          Hint = 'OVERLAYLOAD (lFilename: string): integer; Will add the overlay named filename and return the number of the overlay.'
          OnClick = InsertCommand
        end
        object overlayadditive1: TMenuItem
          Tag = 1
          Caption = 'overlayadditive'
          Hint = 'OVERLAYADDITIVE (ADD: boolean); '
          OnClick = InsertCommand
        end
        object overlaycloseall1: TMenuItem
          Caption = 'overlaycloseall'
          Hint = 'OVERLAYCLOSEALL. This function has no parameters. All open overlays will be closed.'
          OnClick = InsertCommand
        end
        object overlaycolorname1: TMenuItem
          Tag = 1214
          Caption = 'overlaycolorname'
          Hint = 'OVERLAYCOLORNAME (lOverlay: integer; lFilename: string); Set the colorscheme for the target overlay to a specified name.'
          OnClick = InsertCommand
        end
        object overlayminmax1: TMenuItem
          Tag = 1223
          Caption = 'overlayminmax'
          Hint = 'OVERLAYMINMAX (lOverlay: integer; lMin,lMax: single) Sets the color range for the overlay.'
          OnClick = InsertCommand
        end
        object overlaytransparencyonbackground1: TMenuItem
          Tag = 2
          Caption = 'overlaytransparencyonbackground'
          Hint = 'OVERLAYTRANSPARENCYONBACKGROUND (lPct: integer). Controls the opacity of the overlays on the background.'
          OnClick = InsertCommand
        end
        object overlaycolorfromzero1: TMenuItem
          Tag = 1
          Caption = 'overlaycolorfromzero'
          Hint = 'OVERLAYCOLORFROMZERO (FROMZERO: Boolean) If set to false, then the full color range is used to show the overlay.'
          Visible = False
          OnClick = InsertCommand
        end
        object overlayvisible1: TMenuItem
          Tag = 1211
          Caption = 'overlayvisible'
          Hint = 'OVERLAYVISIBLE(OVERLAY: integer; VISIBLE: boolean) The feature allows you to make individual overlays visible or invisible.'
          OnClick = InsertCommand
        end
        object overlaytranslucent1: TMenuItem
          Tag = 1211
          Caption = 'overlaytranslucent'
          Hint = 'OVERLAYTRANSLUCENT(OVERLAY: integer; TRANSLUCENT: boolean) The feature allows you to make individual overlays translucent or opaque.'
          OnClick = InsertCommand
        end
        object overlayinvert1: TMenuItem
          Tag = 1211
          Caption = 'overlayinvert'
          Hint = 'OVERLAYINVERT(OVERLAY: integer; INVERT: boolean) toggle whether overlay color scheme is inverted.'
          OnClick = InsertCommand
        end
        object overlaysmoothvoxelwisedata1: TMenuItem
          Tag = 1
          Caption = 'overlaysmoothvoxelwisedata'
          Hint = 'OVERLAYSMOOTHVOXELWISEDATA(smooth: boolean) Determines if overlays are loaded using interpolation (smooth) or nearest neighbor (un-smoothed) interpolation.'
          OnClick = InsertCommand
        end
      end
      object Nodes1: TMenuItem
        Caption = 'Nodes'
        object edgeload1: TMenuItem
          Tag = 4
          Caption = 'edgeload'
          Hint = 'EDGELOAD(lFilename: string);'
          OnClick = InsertCommand
        end
        object edgecolor1: TMenuItem
          Tag = 1411
          Caption = 'edgecolor'
          Hint = 'EDGECOLOR(name: string; varies: boolean);'
          OnClick = InsertCommand
        end
        object edgesize1: TMenuItem
          Tag = 1311
          Caption = 'edgesize'
          Hint = 'EDGESIZE(size: single; varies: boolean);'
          OnClick = InsertCommand
        end
        object edgethresh1: TMenuItem
          Tag = 23
          Caption = 'edgethresh'
          Hint = 'EDGETHRESH (LO, HI: single);'
          OnClick = InsertCommand
        end
        object nodeload1: TMenuItem
          Tag = 4
          Caption = 'nodeload'
          Hint = 'NODELOAD(lFilename: string);'
          OnClick = InsertCommand
        end
        object nodecolor1: TMenuItem
          Tag = 1411
          Caption = 'nodecolor'
          Hint = 'NODECOLOR(name: string; varies: boolean); '
          OnClick = InsertCommand
        end
        object nodehemisphere1: TMenuItem
          Tag = 2
          Caption = 'nodehemisphere'
          Hint = 'NODEHEMISPHERE(VAL: integer); -1 for left hemipshere, 0 for both, 1 for right'
          OnClick = InsertCommand
        end
        object ndepolarity1: TMenuItem
          Tag = 2
          Caption = 'nodepolarity'
          Hint = 'NODEPOLARITY(VAL: integer); -1 for negative only, 0 for either, 1 for positive only'
          OnClick = InsertCommand
        end
        object nodesize1: TMenuItem
          Tag = 1311
          Caption = 'nodesize'
          Hint = 'NODESIZE(size: single; varies: boolean);'
          OnClick = InsertCommand
        end
        object nodethresh1: TMenuItem
          Tag = 23
          Caption = 'nodethresh'
          Hint = 'NODETHRESH (LO, HI: single); '
          OnClick = InsertCommand
        end
      end
      object Tracks1: TMenuItem
        Caption = 'Tracks'
        object trackload1: TMenuItem
          Tag = 4
          Caption = 'trackload'
          Hint = 'TRACKLOAD(lFilename: string);'
          OnClick = InsertCommand
        end
        object trackprefs1: TMenuItem
          Tag = 33
          Caption = 'trackprefs'
          Hint = 'TRACKPREFS(lLength,lWidth,lDither: single);'
          OnClick = InsertCommand
        end
      end
      object Dialogs1: TMenuItem
        Caption = 'Dialogs'
        object modalmessage1: TMenuItem
          Tag = 4
          Caption = 'modalmessage'
          Hint = 'modalmessage(str: string) Shows a modal dialog, script stops until user presses ''OK'' button to dismiss dialog.'
          OnClick = InsertCommand
        end
        object modelessmessage1: TMenuItem
          Tag = 4
          Caption = 'modelessmessage'
          Hint = 'modelessmessage(str: string) Shows text in the rendering window. This text is displayed until the text is changed.'
          OnClick = InsertCommand
        end
      end
      object Shaders1: TMenuItem
        Caption = 'Shaders'
        OnClick = Shaders1Click
        object shaderadjust1: TMenuItem
          Tag = 1413
          Caption = 'shaderadjust'
          Hint = 'SHADERADJUST(PROPERTY: string; VALUE: single). Sets one of the user-adjustable properties.'
          OnClick = InsertCommand
        end
        object shaderambientocclusion1: TMenuItem
          Tag = 3
          Caption = 'shaderambientocclusion'
          Hint = 'SHADERAMBIENTOCCLUSIO N(lVal: single); range 0..1: strength of crevice shadows'
          OnClick = InsertCommand
        end
        object shadername1: TMenuItem
          Tag = 4
          Caption = 'shadername'
          Hint = 'SHADERNAME (Filename: string) Loads the requested shader.'
          OnClick = InsertCommand
        end
        object shaderlightazimuthelevation1: TMenuItem
          Tag = 22
          Caption = 'shaderlightazimuthelevation'
          Hint = 'SHADERLIGHTAZIMUTHELEVATION(AZI, ELEV: integer). Changes location of light source.'
          OnClick = InsertCommand
        end
        object shaderxray1: TMenuItem
          Tag = 23
          Caption = 'shaderxray'
          Hint = 'SHADERXRAY(lObject, lOverlay: single);  See occluded overlays/tracks/nodes by making either object transparent (0..1) or overlay/tracks/nodes emphasized (0..1)'
          OnClick = InsertCommand
        end
        object MenuItem1: TMenuItem
          Tag = 1
          Caption = 'shaderforbackgroundonly'
          Hint = 'SHADERFORBACKGROUNDONLY(ONLYBG: boolean). If true selected shader only influeces background image, otherwise shader influences background, overlays, tracks and nodes.'
          OnClick = InsertCommand
        end
      end
      object Render1: TMenuItem
        Caption = 'View'
        object azimuth1: TMenuItem
          Tag = 2
          Caption = 'azimuth'
          Hint = 'AZIMUTH (DEG: integer) This command rotates the rendering.'
          OnClick = InsertCommand
        end
        object azimuthelevation1: TMenuItem
          Tag = 22
          Caption = 'azimuthelevation'
          Hint = 'AZIMUTHELEVATION (AZI, ELEV: integer). Sets the viewer location.'
          OnClick = InsertCommand
        end
        object backcolor1: TMenuItem
          Tag = 36
          Caption = 'backcolor'
          Hint = 'BACKCOLOR (R,G,B: byte) Changes the background color, for example BACKCOLOR(255, 0, 0) will set a bright red background'
          OnClick = InsertCommand
        end
        object cameradistance1: TMenuItem
          Tag = 3
          Caption = 'cameradistance'
          Hint = 'CAMERADISTANCE (Z: single) Sets the viewing distance from the object.'
          OnClick = InsertCommand
        end
        object camerapan1: TMenuItem
          Tag = 23
          Caption = 'camerapan'
          Hint = 'CAMERAPAN (X, Y: single) Translate image horizontally (x) and vertically (y). range -1..+1, where 0 is centered. '
          OnClick = InsertCommand
        end
        object MenuItem2: TMenuItem
          Tag = 2
          Caption = 'colorbarposition'
          Hint = 'COLORBARPOSITION (P: integer). Sets the position of the colorbar: 1=bottom, 2=left, 3=top, 4=right.'
          OnClick = InsertCommand
        end
        object colorbarvisible1: TMenuItem
          Tag = 1
          Caption = 'colorbarvisible'
          Hint = 'COLORBARVISIBLE (VISIBLE: boolean). Shows a colorbar on the main images.'
          OnClick = InsertCommand
        end
        object clip1: TMenuItem
          Tag = 3
          Caption = 'clip'
          Hint = 'CLIP (DEPTH: single) Creates a clip plane that hides information close to the viewer.'
          OnClick = InsertCommand
        end
        object clipazimuthelevation1: TMenuItem
          Tag = 33
          Caption = 'clipazimuthelevation'
          Hint = 'CLIPAZIMUTHELEVATION (DEPTH, AZI, ELEV: single). Set a view-point independent clip plane.'
          OnClick = InsertCommand
        end
        object elevation1: TMenuItem
          Tag = 2
          Caption = 'elevation'
          Hint = 'ELEVATION (DEG: integer) changes the render camera up or down.'
          OnClick = InsertCommand
        end
        object orientcubevisible1: TMenuItem
          Tag = 1
          Caption = 'orientcubevisible'
          Hint = 'ORIENTCUBEVISIBLE (VISIBLE: boolean); show or hide cube that indicates object rotation'
          OnClick = InsertCommand
        end
        object viewaxial1: TMenuItem
          Tag = 1
          Caption = 'viewaxial'
          Hint = 'VIEWAXIAL (STD: boolean) creates rendering from an axial viewpoint.'
          OnClick = InsertCommand
        end
        object viewcoronal1: TMenuItem
          Tag = 1
          Caption = 'viewcoronal'
          Hint = 'VIEWCORONAL (STD: boolean) creates rendering from a coronal viewpoint.'
          OnClick = InsertCommand
        end
        object viewsagittal1: TMenuItem
          Tag = 1
          Caption = 'viewsagittal'
          Hint = 'VIEWSAGITTAL (STD: boolean) creates rendering from an sagittal viewpoint.'
          OnClick = InsertCommand
        end
      end
      object Close1: TMenuItem
        Caption = 'closeall'
        Hint = 'CLOSEALL Closes all open meshes, overlays, nodes and tracks'
        Visible = False
        OnClick = InsertCommand
      end
      object quit1: TMenuItem
        Caption = 'quit'
        Hint = 'QUIT Terminate application. Useful if another program is controlling this software'
        OnClick = InsertCommand
      end
      object resetdefaults1: TMenuItem
        Caption = 'resetdefaults'
        Hint = 'RESETDEFAULTS Sets all of the user adjustable settings to their default values.'
        OnClick = InsertCommand
      end
      object savebmp1: TMenuItem
        Tag = 4
        Caption = 'savebmp'
        Hint = 'SAVEBMP (lFilename: string) Saves the currently viewed image as a PNG format compressed bitmap image.'
        OnClick = InsertCommand
      end
      object wait1: TMenuItem
        Tag = 2
        Caption = 'wait'
        Hint = 'WAIT (MSEC: integer) The program pauses for the specified duration. For example WAIT(1000) delays the script for one second.'
        OnClick = InsertCommand
      end
    end
    object Toosl1: TMenuItem
      Caption = '&Script'
      object Compile1: TMenuItem
        Caption = 'Run'
        ShortCut = 16466
        OnClick = Compile1Click
      end
      object N2: TMenuItem
        Caption = '-'
      end
      object Stop1: TMenuItem
        Caption = 'Halt'
        ShortCut = 16456
        OnClick = Stop1Click
      end
    end
  end
  object OpenDialog1: TOpenDialog
    DefaultExt = '.gls'
    FileName = '*.gls'
    Filter = 'scripts (*.gls)|*.gls'
    Options = [ofHideReadOnly, ofNoChangeDir, ofPathMustExist, ofFileMustExist, ofDontAddToRecent]
    left = 40
    top = 104
  end
  object SaveDialog1: TSaveDialog
    DefaultExt = '.gls'
    FileName = '*.gls'
    Filter = 'scripts (*.gls)|*.gls'
    Options = [ofHideReadOnly, ofPathMustExist]
    left = 40
    top = 144
  end
  object PSScript1: TPSScript
    CompilerOptions = []
    OnCompile = PSScript1Compile
    Plugins = <>
    UsePreProcessor = False
    left = 39
    top = 64
  end
end
